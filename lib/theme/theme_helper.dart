import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.whiteA700.withOpacity(0.88),
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        headlineLarge: TextStyle(
          color: Color(0XFF000000),
          fontSize: 32.fSize,
          fontFamily: 'Tajawal',
          fontWeight: FontWeight.w700,
        ),
        headlineMedium: TextStyle(
          color: appTheme.orange10001,
          fontSize: 27.fSize,
          fontFamily: 'Tajawal',
          fontWeight: FontWeight.w800,
        ),
        headlineSmall: TextStyle(
          color: appTheme.blueGray90001,
          fontSize: 24.fSize,
          fontFamily: 'Tajawal',
          fontWeight: FontWeight.w500,
        ),
        labelLarge: TextStyle(
          color: appTheme.black900.withOpacity(0.5),
          fontSize: 13.fSize,
          fontFamily: 'Tajawal',
          fontWeight: FontWeight.w700,
        ),
        titleLarge: TextStyle(
          color: appTheme.blueGray900,
          fontSize: 20.fSize,
          fontFamily: 'Tajawal',
          fontWeight: FontWeight.w500,
        ),
        titleMedium: TextStyle(
          color: appTheme.deepOrange300,
          fontSize: 16.fSize,
          fontFamily: 'Tajawal',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: appTheme.green300,
          fontSize: 14.fSize,
          fontFamily: 'Tajawal',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light();
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber100 => Color(0XFFFBEAB8);
  Color get amber200 => Color(0XFFFDDB7B);
  Color get amber20001 => Color(0XFFFFDF90);
  Color get amber20002 => Color(0XFFFCDF8F);
  Color get amberA700 => Color(0XFFFFA800);

  // Black
  Color get black900 => Color(0XFF000000);

  // BlackBc
  Color get black900Bc => Color(0XBC000C24);

  // Blue
  Color get blue300 => Color(0XFF5CADE8);

  // BlueGray
  Color get blueGray900 => Color(0XFF1C274D);
  Color get blueGray90001 => Color(0XFF1C274C);

  // CyanD
  Color get cyan200D6 => Color(0XD691DAEC);

  // DeepOrange
  Color get deepOrange300 => Color(0XFFF5806E);
  Color get deepOrange50 => Color(0XFFF4EADB);

  // GrayE
  Color get gray200E0 => Color(0XE0EDE7E7);

  // Gray
  Color get gray300 => Color(0XFFDDDBDB);
  Color get gray50 => Color(0XFFFFF9F2);

  // Green
  Color get green300 => Color(0XFF76B283);

  // Lime
  Color get lime100 => Color(0XFFFAE9CD);

  // Orange
  Color get orange100 => Color(0XFFFAE4A7);
  Color get orange10001 => Color(0XFFFBE4A7);
  Color get orange10002 => Color(0XFFFBE5A7);
  Color get orange50 => Color(0XFFFFEAD1);
  Color get orange5001 => Color(0XFFFFF3E6);

  // OrangeFc
  Color get orange100Fc => Color(0XFCFFE6A4);

  // Red
  Color get red100 => Color(0XFFF1D3CE);
  Color get red500 => Color(0XFFFE4238);
  Color get redA100 => Color(0XFFF98980);
  Color get redA200 => Color(0XFFFD6456);
  Color get redA20001 => Color(0XFFFD5349);
  Color get redA700 => Color(0XFFDD0000);
  Color get redA70001 => Color(0XFFFF0000);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
